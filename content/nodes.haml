-# Copyright Daniel Mei√üner <dm@3st.be>, 2012
-#
-# This file is part of FreifunkKBUInfoPage.
-#
-# FreifunkKBUInfoPage is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.
-#
-# FreifunkKBUInfoPage is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with FreifunkKBUInfoPage. If not, see <http://www.gnu.org/licenses/>.

%h2= t('nodes.header')

%ol
  %li
    %h3= t('nodes.description.headline')

    .description
      = textilize(t('nodes.description.text'))
  %li
    %h3.map= t('nodes.map.headline')

    #mapdiv
    %script{:src => "http://www.openlayers.org/api/OpenLayers.js"}

    :javascript
      map = new OpenLayers.Map("mapdiv", {
        controls: [
          new OpenLayers.Control.MouseDefaults(),
          new OpenLayers.Control.LayerSwitcher(),
          new OpenLayers.Control.PanZoomBar()],
      });

      map.addLayer(new OpenLayers.Layer.OSM());

      var sundials = new OpenLayers.Layer.Vector("Access points", {
          projection: map.displayProjection,
          strategies: [new OpenLayers.Strategy.Fixed()],
          protocol: new OpenLayers.Protocol.HTTP({
              url: "/txt/nodes.kml", // thx to the oldenburg guys TODO: should be cleaned and filled with own sections
              format: new OpenLayers.Format.KML({
                  extractStyles: true,
                  extractAttributes: true
              })
          })
      });

      map.addLayer(sundials);

      select = new OpenLayers.Control.SelectFeature(sundials);

      sundials.events.on({
        "featureselected": onFeatureSelect,
        "featureunselected": onFeatureUnselect
      });

      map.addControl(select);
      select.activate();

      //Set start centrepoint and zoom
      var lonLat = new OpenLayers.LonLat( 6.968, 50.82 )
      .transform(
        new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
          map.getProjectionObject() // to Spherical Mercator Projection
        );
      var zoom=11;
      map.setCenter (lonLat, zoom);


      function onPopupClose(evt) {
          select.unselectAll();
      }
      function onFeatureSelect(event) {
          var feature = event.feature;
          // Since KML is user-generated, do naive protection against
          // Javascript.
          var content = "<h2>"+feature.attributes.name + "</h2>" + feature.attributes.description;
          if (content.search("<script") != -1) {
              content = "Content contained Javascript! Escaped content below.<br>" + content.replace(/</g, "&lt;");
          }
          popup = new OpenLayers.Popup.FramedCloud("chicken",
                                   feature.geometry.getBounds().getCenterLonLat(),
                                   new OpenLayers.Size(100,100),
                                   content,
                                   null, true, onPopupClose);
          feature.popup = popup;
          map.addPopup(popup);
      }
      function onFeatureUnselect(event) {
          var feature = event.feature;
          if(feature.popup) {
              map.removePopup(feature.popup);
              feature.popup.destroy();
              delete feature.popup;
         }

      }